name: dockerize
description: 'Build, Push Docker Container'
inputs:
  project_id:
    description: 'Google Cloud Project ID'
    required: true
  service_name:
    description: 'Google Cloud Run Service Name'
    required: true
  credentials_json:
    description: 'Google Cloud Service Account JSON'
    required: true
  gar_hostname:
    description: 'Google Artifact Registry hostname'
    required: true
    default: us-central1-docker.pkg.dev
  dockerfile:
    description: 'Location of Dockerfile'
    required: true
    default: ./Dockerfile
  secret_envs:
    description: 'Secret environment variables'
    required: false

runs:
  using: 'composite'
  steps:
    - run: nproc
      shell: bash

    - uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ inputs.credentials_json }}'

    - uses: google-github-actions/setup-gcloud@v2
      with:
        skip_install: true

    - run: gcloud auth configure-docker ${{ inputs.gar_hostname }}
      shell: bash

    - uses: docker/setup-buildx-action@v3

    - run: |
        if docker manifest inspect ${{ inputs.gar_hostname }}/${{ inputs.project_id }}/shared-docker-registry/${{ inputs.service_name }}:${{ github.sha }} > /dev/null; then
          echo "Image exists. Skipping build and push."
          echo "SKIP_BUILD=true" >> $GITHUB_ENV
        else
          echo "Image does not exist. Proceeding with build and push."
          echo "SKIP_BUILD=false" >> $GITHUB_ENV
        fi
      shell: bash

    - if: env.SKIP_BUILD == 'false'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ inputs.dockerfile }}
        push: true
        tags: ${{ inputs.gar_hostname }}/${{ inputs.project_id }}/shared-docker-registry/${{ inputs.service_name }}:${{ github.sha }}
        build-args: ${{ inputs.secret_envs }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
